name: CI Checks (Linting and Tests)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

concurrency:
  group: tests-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  ROBOLIST_ENVIRONMENT: local
  JWT_SECRET: test
  AWS_ACCESS_KEY_ID: test
  AWS_SECRET_ACCESS_KEY: test
  AWS_ENDPOINT_URL_DYNAMODB: http://localhost:8000
  AWS_REGION: us-east-1

jobs:
  run-tests:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    # Commenting out because PyTest mocks these services.
    # services:
    #   dynamodb-local:
    #     image: amazon/dynamodb-local
    #     options: >-
    #       -p 0:8000
    #       -v /tmp/dynamodb:/data
    #     ports:
    #       - 8000
    #   redis-local:
    #     image: redis
    #     options: >-
    #       -p 0:6379
    #     ports:
    #       - 6379

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Restore cache
        id: restore-cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ${{ env.pythonLocation }}
            .mypy_cache/
            node_modules/
          key: tests-${{ github.event.pull_request.base.sha || github.sha }}
          restore-keys: |
            tests-

      - name: Install Node package
        working-directory: frontend
        run: |
          npm install

      - name: Build frontend
        run: |
          npm run build
        working-directory: frontend

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Python package
        run: |
          pip install --upgrade --upgrade-strategy eager -e '.[dev]'

      - name: Run static checks
        run: |
          mkdir -p .mypy_cache
          make static-checks

      - name: Run unit tests
        run: |
          make test-backend

      - name: Save cache
        uses: actions/cache/save@v3
        if: github.ref == 'refs/heads/master'
        with:
          path: |
            ${{ env.pythonLocation }}
            .mypy_cache/
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}
